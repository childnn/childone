Don't Repeat Yourself. DRY 原则, 避免出现重复的代码.


URL: uniform resources locator
URI: uniform resources identifier
IP: internet protocol
DNS: domain name system

正向代理: 客户端明确知道要访问的服务器地址(翻墙就是正向代理)
    服务器只清楚请求来自哪个代理服务器, 而不清楚来自哪个具体客户端
    正向代理模式屏蔽/隐藏了 真实客户端信息.
   正向代理, 代理的是 客户端, 是一个位于客户端和原始服务器(origin server)之间的服务器,
   为了从原始服务器取得内容,客户端向 代理 发送一个请求并指定目标(origin server),然后 代理
   向 原始服务器 转交请求并将获得的内容返回给 客户端, 客户端必须要进行一些特别的设置才能使用正向代理
  用途:
   1. 访问原来无法访问的资源. google
   2. 可以做缓存, 加速访问资源
   3. 对客户端访问授权, 上网认证
   4. 代理可以记录客户访问记录(上网行为管理), 对外隐藏用户信息

反向代理: (分布式的应用)
   多个客户端发送请求到服务器, Nginx 服务器接收到之后, 按照一定的规则分发给了后端的业务处理服务器进行处理.
   此时,请求的来源也就是 客户端是明确的,但是请求具体由哪台服务器处理并不明确(由 nginx 分配), Nginx 扮演了反向代理的角色
   客户端 无法感知代理的存在,访问者并不知道自己访问的是一个代理. 因为客户端不需要任何配置就可以访问.
   反向代理,代理的是 服务端, 主要用于 服务器集群分布式部署的情况, 反向代理隐藏了服务器的信息.
  用途:
    1. 保证内网的安全, 通常将反向代理作为公网访问地址, web 服务器是内网
    2. 负载均衡, 通过反向代理服务器来优化网站的负载


idempotent: 幂等性
