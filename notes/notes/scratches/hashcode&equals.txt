equals:
    当你创建一个类的时候，它自动继承自 Objcet 类。如果你不覆写 equals() ，你将会获得 Objcet 对象的 equals() 函数。
    默认情况下，这个函数会比较对象的地址。所以只有你在比较同一个对象的时候，你才会获得true。默认的情况是"区分度最高的"。
    ---
    一个合适的 equals()函数必须满足以下五点条件：
    1. 反身性：对于任何 x， x.equals(x) 应该返回 true。
    2. 对称性：对于任何 x 和 y， x.equals(y) 应该返回 true当且仅当 y.equals(x) 返回 true 。
    3. 传递性：对于任何x,y,还有z，如果 x.equals(y) 返回 true 并且 y.equals(z) 返回 true，那么  x.equals(z) 应该返回 true。
    4. 一致性：对于任何 x和y，在对象没有被改变的情况下，多次调用 x.equals(y) 应该总是返回 true 或者false。
    5. 对于任何非null的x，x.equals(null)应该返回false。
    ---
    下面是满足这些条件的测试，并且判断对象是否和自己相等（我们这里称呼其为右值）：
    1. 如果右值是null，那么不相等。
    2. 如果右值是this，那么两个对象相等。
    3. 如果右值不是同一个类型或者子类，那么两个对象不相等。
    4. 如果所有上面的检查通过了，那么你必须决定 右值 中的哪些字段是重要的，然后比较这些字段。
       Java 7 引入了 Objects 类型来帮助这个流程，这样我们能够写出更好的 equals() 函数。