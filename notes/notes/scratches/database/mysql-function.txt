
ifnull(expr1, expr2): 如果 expr1 为 null, 则返回 expr2, 否则 expr1
nullif(expr1, expr2): 如果 expr1 和 expr2 相等, 则返回 null, 否则返回 expr1
if(ex1, ex2, ex3): 三元运算符. 如果 ex1 为 true, 不等于 0, 不等于 null, 则返回 ex2, 否则返回 ex3
isnull(ex1): 判断 ex1 是否为 null, 如果为 null 则返回  true, 否则返回 false

case 函数:
  语法一:
    case value
    when compare_value1 then result1
    when compare_value2 then result2
    ...
    else result
    end
 eg:
   select stu_name,
       case teach_id
       when 1 then 'Java 老师'
       when 2 then 'C老师'
       else '未知'
       end
   from table_name;
  语法二:
    case
    when condition1 then result1
    when condition2 then result2
    ...
    else result
    end
  -- condition 为返回一个 boolean 值的表达式.
=================================
avg([distinct|all]expr): 计算多行 expr 平均值, 其中 expr 可以是变量, 常量或数据列, 但其数据类型必须为整型.
      可以在变量,列前使用 distinct 或 all 关键字, 如果使用 distinct, 则表明不计算重复值; all 为默认值, 计算重复值.
count({*|[distinct|all]expr}): 计算多行 expr 的总条数, 其中, expr 可以是变量, 常量或数据列, 数据类型任意;
     用 * 表示统计该表内的记录行数; distinct 表示不计算重复值.
max(expr): 计算多行 expr 的最大值, 其中 expr 可以是变量, 常量或数据列, 数据类型任意.
min(expr): 计算多行 expr 的最小值, 其中 expr 可以是变量, 常量会数据列, 数据类型任意.
sum([distinct|all]expr): 计算多行 expr 的总和, 其中, expr 可以是变量, 常量或数据列, 但其数据类型必须是数值型; distinct 表示不计算重复值.





SELECT CURDATE();
SELECT CURRENT_DATE();
SELECT CURRENT_TIME();
select CURRENT_TIMESTAMP();
select DATE('2019-10-1');
select DAY('2019-11-1');
SELECT DAYNAME('2019-11-1'); # 星期 Friday.
SELECT MONTHNAME('2019-11-1'); # November.

SELECT DAYOFWEEK('2019-11-1'); # 周天开始算起.
SELECT DAYOFMONTH('2019-11-1');
SELECT DAYOFYEAR('2019-11-1');
SELECT LAST_DAY('2019-11-1'); # 返回给给定日期的那一月份的最后一天.
SELECT HOUR('2019-11-1 12:13:14'); # 小时值.
SELECT MINUTE('12:13:14'); # 分钟数.
SELECT MAKEDATE('2019', 300); # 基于给定参数年份 year 和所在年中的天数序号 day-of-year 返回一个日期.
SELECT MAKETIME('1', 2, 3); # 组合时间，参数分别为小时、分钟、秒.


SELECT EXTRACT(MONTH FROM '2019-11-1');
/*EXTRACT(type FROM d)	从日期 d 中获取指定的值，type 指定返回的值。
type可取值为：
MICROSECOND
SECOND
MINUTE
HOUR
DAY
WEEK
MONTH
QUARTER
YEAR
SECOND_MICROSECOND
MINUTE_MICROSECOND
MINUTE_SECOND
HOUR_MICROSECOND
HOUR_SECOND
HOUR_MINUTE
DAY_MICROSECOND
DAY_SECOND
DAY_MINUTE
DAY_HOUR
YEAR_MONTH*/

str_to_date('2018-05-06','%Y-%m-%d')
date_format(order_time, '%Y-%m-%d')
%Y：代表4位的年份
%y：代表2为的年份

%m：代表月, 格式为(01……12)
%c：代表月, 格式为(1……12)

%d：代表月份中的天数,格式为(00……31)
%e：代表月份中的天数, 格式为(0……31)

%H：代表小时,格式为(00……23)
%k：代表 小时,格式为(0……23)
%h： 代表小时,格式为(01……12)
%I： 代表小时,格式为(01……12)
%l ：代表小时,格式为(1……12)

%i： 代表分钟, 格式为(00……59)

%r：代表 时间,格式为12 小时(hh:mm:ss [AP]M)
%T：代表 时间,格式为24 小时(hh:mm:ss)

%S：代表 秒,格式为(00……59)
%s：代表 秒,格式为(00……59)