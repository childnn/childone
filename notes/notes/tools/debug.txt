一. 开篇
    断点：在左边行号栏单击左键，或者快捷键Ctrl+F8 打上/取消断点，断点行的颜色可自己去设置
    Debug窗口：访问请求到达第一个断点后，会自动激活Debug窗口。如果没有自动激活，可以去设置里设置(build选项)
    调试按钮(横向)：一共有8个按钮，调试的主要功能就对应着这几个按钮，鼠标悬停在按钮上可以查看对应的快捷键。在菜单栏Run里可以找到同样的对应的功能
    服务按钮(左侧纵向)：可以在这里关闭/启动服务，设置断点等。
    方法调用栈：这里显示了该线程调试所经过的所有方法，勾选右上角的[Show All Frames]按钮，就不会显示其它类库的方法了，否则这里会有一大堆的方法。
    Variables：在变量区可以查看当前断点之前的当前方法内的变量。
    Watches：查看变量，可以将Variables区中的变量拖到Watches中查看
二. 基本用法
    1. 调试按钮(8个)
       1) Show Execution Point (Alt + F10)：如果你的光标在其它行或其它页面，点击这个按钮可跳转到当前代码执行的行。
       2) Step Over (F8)：步过，一行一行地往下走，如果这一行上有方法不会进入方法。
       3) Step Into (F7)：步入，如果当前行有方法，可以进入方法内部，一般用于进入自定义方法内，不会进入官方类库的方法
       4) Force Step Into (Alt + Shift + F7)：强制步入，能进入任何方法，查看底层源码的时候可以用这个进入官方类库的方法。
       5) Step Out (Shift + F8)：步出，从步入的方法内退出到方法调用处，此时方法已执行完毕，只是还没有完成赋值。
       6) Drop Frame (默认无)：回退断点，后面章节详细说明。
       7) Run to Cursor (Alt + F9)：运行到光标处，你可以将光标定位到你需要查看的那一行，然后使用这个功能，代码会运行至光标行，而不需要打断点。
       8) Evaluate Expression (Alt + F8)：计算表达式
    2. 服务按钮(7个)
       1) Rerun 'xxxx'：重新运行程序，会关闭服务后重新启动程序。
       2) Update 'xxxx' application (Ctrl + F5)：更新程序，一般在你的代码有改动后可执行这个功能。而这个功能对应的操作则是在服务配置里
       3) Resume Program (F9)：恢复程序，比如，你在第20行和25行有两个断点，当前运行至第20行，按F9，则运行到下一个断点(即第25行)，再按F9，则运行完整个流程，因为后面已经没有断点了。
       4) Pause Program：暂停程序，启用Debug。目前没发现具体用法。
       5) Stop 'xxx' (Ctrl + F2)：连续按两下，关闭程序。有时候你会发现关闭服务再启动时，报端口被占用，这是因为没完全关闭服务的原因，你就需要查杀所有JVM进程了。
       6) View Breakpoints (Ctrl + Shift + F8)：查看所有断点，后面章节会涉及到。
       7) Mute Breakpoints：哑的断点，选择这个后，所有断点变为灰色，断点失效，按F9则可以直接运行完程序。再次点击，断点变为红色，有效。如果只想使某一个断点失效，可以在断点上右键取消Enabled，如图2.4，则该行断点失效。
     更新程序，On 'Update' actions，执行更新操作时所做的事情，一般选择'Update classes and resources'，即更新类和资源文件。
     一般配合热部署插件会更好用，如JRebel，这样就不用每次更改代码后还要去重新启动服务。如何激活JRebel，在最后章节附上。
     下面的On frame deactivation，在IDEA窗口失去焦点时触发，即一般你从idea切换到浏览器的时候，idea会自动帮你做的事情，一般可以设置Do nothing，频繁切换会比较消耗资源的。
    3. 智能步入 smart step into : shift + F7
      一行代码有好几个方法,只能步入可以选择进入某一个方法
    4. 服务按钮(左侧纵向)
      点击View Breakpoints (Ctrl + Shift + F8)，查看所有断点。
      Java Line Breakpoints 显示了所有的断点，在右边勾选Condition，设置断点的条件。
      勾选Log message to console，则会将当前断点行输出到控制台
      勾选Evaluate and log，可以在执行这行代码是计算表达式的值，并将结果输出到控制台。
    5. 断点回退
       所谓的断点回退，其实就是回退到上一个方法调用的开始处，在IDEA里测试无法一行一行地回退或回到到上一个断点处，而是回到上一个方法。
       回退的方式有两种，一种是Drop Frame按钮，按调用的方法逐步回退，包括三方类库的其它方法(取消Show All Frames按钮会显示三方类库的方法)。
       第二种方式，在调用栈方法上选择要回退的方法，右键选择Drop Frame，回退到该方法的上一个方法调用处，此时再按F9(Resume Program)，可以看到程序进入到该方法的断点处了。