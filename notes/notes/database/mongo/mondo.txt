mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]
    mongodb:// 这是固定的格式，必须要指定。
    username:password@ 可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登录这个数据库
    host1 必须的指定至少一个host, host1 是这个URI唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。
    portX 可选的指定端口，如果不填，默认为27017
    /database 如果指定username:password@，连接并验证登录指定数据库。若不指定，默认打开 test 数据库。
    ?options 是连接选项。如果不使用/database，则前面需要加上/。所有连接选项都是键值对name=value，键值对之间通过&或;（分号）隔开

标准的连接格式包含了多个选项(options)，如下所示：

选项	                            描述
replicaSet=name	                验证replica set的名称。 Impliesconnect=replicaSet.
slaveOk=true|false             true:在connect=direct模式下，驱动会连接第一台机器，即使这台服务器不是主。
                                    在connect=replicaSet模式下，驱动会发送所有的写请求到主并且把读取操作分布在其他从服务器。
                               false: 在 connect=direct模式下，驱动会自动找寻主服务器.
                                    在connect=replicaSet 模式下，驱动仅仅连接主服务器，并且所有的读写命令都连接到主服务器。
safe=true|false                true: 在执行更新操作之后，驱动都会发送getLastError命令来确保更新成功。(还要参考 wtimeoutMS).
                               false: 在每次更新之后，驱动不会发送getLastError来确保更新成功。
w=n	                           驱动添加 { w : n } 到getLastError命令. 应用于safe=true。
wtimeoutMS=ms	               驱动添加 { wtimeout : ms } 到 getlasterror 命令. 应用于 safe=true.
fsync=true|false               true: 驱动添加 { fsync : true } 到 getlasterror 命令.应用于 safe=true.
                               false: 驱动不会添加到getLastError命令中。
journal=true|false	           如果设置为 true, 同步到 journal (在提交到数据库前写入到实体中). 应用于 safe=true
connectTimeoutMS=ms	           可以打开连接的时间。
socketTimeoutMS=ms	           发送和接受sockets的时间。

------------------------------------------
// 使用/创建 db
use test
// 创建 collection
db.createCollection("collect")
// db 表示当前db
// db. 后接的就是 collection, 有则使用, 没有则创建
// 也就是说, mongodb 不需要单独创建集合, 使用即创造
db.aaa.insertOne({"name": "value"})
db.aaa.insertOne({"name": "value", "_id": "12312"})

show collections

// 删除集合
db.collect.drop()


save()：如果 _id 主键存在则更新数据，如果不存在就插入数据。该方法新版本中已废弃，可以使用 db.collection.insertOne() 或 db.collection.replaceOne() 来代替。
insert(): 若插入的数据主键已经存在，则会抛 org.springframework.dao.DuplicateKeyException 异常，提示主键重复，不保存当前数据。