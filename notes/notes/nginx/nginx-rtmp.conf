#user  nobody;
worker_processes  1;
 
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
 
#pid        logs/nginx.pid;
 
 
events {
    worker_connections  1024;
}
 
 
http {
    include       mime.types;
    default_type  application/octet-stream;
 
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';
 
    #access_log  logs/access.log  main;
 
    sendfile        on;
    #tcp_nopush     on;
 
    #keepalive_timeout  0;
    keepalive_timeout  65;
 
    #gzip  on;
 
    server {
        listen       8888;
        server_name  localhost;
 
        #charset koi8-r;
 
        #access_log  logs/host.access.log  main;
 
        location / {
            root   html;
            index  index.html index.htm;
        }
 
 
 
        # 重要 http-flv  转流配置
 
        location /live {
            flv_live on; #打开 HTTP 播放 FLV 直播流功能
            chunked_transfer_encoding on; #支持 'Transfer-Encoding: chunked' 方式回复
 
            add_header 'Access-Control-Allow-Origin' '*'; #添加额外的 HTTP 头
            add_header 'Access-Control-Allow-Credentials' 'true'; #添加额外的 HTTP 头
            add_header 'Cache-Control' 'no-cache';
        }
		
		# ffmpeg生成hls流的http访问配置
		# 海康默认推流地址:
# 		rtsp://admin:Wdd123123!@10.41.59.24:554/Streaming/Channels/101
#       rtsp://admin:Wdd123123!@10.41.59.24:554/h264/ch1/main/av_stream
# 上述二者的区别未知, 推流地址有很多, 详细可以百度下
# rtmp://127.0.0.1:1935/hls/live, /hls 为推流地址, live 实际上为生成的视频文件名, 可以随意. 比如多个流推到同一个目录, 使用不同的问及案名
		# ffmpeg.exe -rtsp_transport tcp -buffer_size 4096000 -i "rtsp://admin:Wdd123123!@10.41.59.24:554/Streaming/Channels/101?transportmode=unicast" -vcodec copy -acodec copy -f flv "rtmp://127.0.0.1:1935/hls/live"
		location /hls {
			#若nginx\conf\mime.types中没有配置如下type，请加上，或直接在mime.types加
			types{
				#application/vnd.apple.mpegurl m3u8;
				application/x-mpegURL m3u8;
				video/mp2t ts;
			}
			root html; # nginx 的 html 目录下
			add_header Cache-Control no-cache;
			add_header Access-Control-Allow-Origin *;
		}
 
 
 
 
 
        #error_page  404              /404.html;
 
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
 
}
 
# 重要  rtmp推流相关配置
 
rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;
 
rtmp {
    out_queue           4096;
    out_cork            8;
    max_streams         128;
    timeout             15s;
    drop_idle_publisher 15s;
 
    log_interval 5s; #log模块在access.log中记录日志的间隔时间，对调试非常有用
    log_size     1m; #log模块用来记录日志的缓冲区大小
 
    server {
        listen 1935;
		chunk_size 4096;  
        # server_name www.test.*;  #当模块中，只有一个server时，可以不配置server_name，nginx对于请求，当找不到匹配的server_name时，会默认发给第一个server进行处理。
 
        application myapp { # rtmp 地址
            live on;
            gop_cache on; #打开GOP缓存，减少首屏等待时间
        }
		
		 application hls { #hls的地址
            live on;
            hls on;
            hls_path html/hls;
	        hls_fragment 1s;
	    }

 
    }
}