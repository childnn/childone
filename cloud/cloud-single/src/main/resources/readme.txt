理解 spring-boot-dependencies 和 spring-boot-starter-*
spring-boot-starter-parent 的父依赖就是 dependencies


单体架构: 试图与数据在同一个应用
分布式: 将一个大的系统划分为多个业务模块(垂直拆分), 不同的业务模块部署在不同的机器上, 各个业务模块通过接口进行数据交互.
       或者水平拆分, 根据三层架构思想拆分 表示层-service-dao, 再把每层分于不同的机器部署(不同层之间可以通过 dubbo 等 RPC 整合).
集群: 相同的服务部署多台服务器(负载均衡). 如 spring-boot 中可以将同一个项目部署在不同端口.
微服务: 可以认为是更细粒度的垂直拆分(一个微服务只负责某一小部分特定的功能)
另: 分布式可以认为是分散服务器压力, 微服务侧重于分散各个应用本身的能力(能力单一化)
    分布式强调服务化以及服务的分散化, 微服务强调服务的专业化和精细分工
    微服务架构通常是分布式服务架构, 反之不一定成立
    选择微服务通常意味着需要解决分布式架构的各种难题
    微服务要解决的是快速迭代、高可用等问题, 适应互联网产品的快速迭代
