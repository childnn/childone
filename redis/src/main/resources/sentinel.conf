# example sentinel.conf
# 哨兵 sentinel 实例运行的端口 默认 26379
# 哨兵集群时可以修改, 类似配置多个 redis 主从实例的不同端口
port 26379

# 哨兵 sentinel 的工作目录
dir /tmp

# 哨兵 sentinel 监控的 redis 主节点 ip port
# master-name 可以自己命名的主节点名字, 只能由字母 A-z, 数字, .-_ 组成
# quorum 配置多少个 sentinel 哨兵统一认为 master 主节点失联 那么这时客观上认为主节点失联了
# sentinel monitor <master-name> <ip> <redis-port> <quorum>
sentinel monitor mymaster 127.0.0.1 6379 2

# 当在 redis 实例中开启了 requirepass foobared 授权密码, 这样所有连接 redis 实例的客户端都要提供密码
# 设置哨兵 sentinel 连接主从的密码, 注意必须为主从设置一样的密码
# sentinel auth-pass <master-name> <password>
sentinel auth-pass mymaster MySuper--secret-0123passw0rd

# 指定多少毫秒后, 主节点没有应答哨兵 sentinel 此时哨兵主观上认为主节点下线 默认 30s
# sentinel down-after-milliseconds <master-name> <milliseconds>
sentinel down-after-milliseconds mymaster 3000

# 这个配置项指定了在发生 failover 主备切换时最多可以有多少个 slave 同时对新的 master 进行同步
# 这个数字越小, 完成 failover 所需的时间就越长
# 但是如果这个数字越大, 就意味着越多的 slave 因为 replication 而不可用
# 可以通过将这个值设置为 1 来保证每次只有一个 slave 处于不能处理命令请求的状态
# sentinel parallel-syncs <master-name> <numslaves>
sentinel parallel-syncs mymaster 1

# 故障转移的超时时间 failover-timeout 可以用在以下这些方面
# 1. 同一个 sentinel 对同一个 master 两次 failover 之间的间隔时间
# 2. 当一个 slave 从一个错误的 master 那里同步数据开始计算时间 直到 slave 被纠正为向正确的 master 那里同步数据时
# 3. 当想要取消一个正在进行的 failover 所需的时间
# 4. 当进行 failover 时, 配置所有的 slaves 指向新的 master 所需的最大时间. 不过, 即使过了这个时间, slaves 依然会被正确配置
   为指向 master, 但是就不该 parallel-syncs 所配置的规则来了
# 默认三分钟
# sentinel failover-timeout <master-name> <milliseconds>
sentinel failover-timeout mymaster 180000

# ... 其他